version: 2.1

exclude_master: &exclude_master
  filters:
    branches:
      ignore: master

require_stylecheck: &require_stylecheck
  requires:
    - stylecheck

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

jobs:
  stylecheck:
    description: Validate formatting of code and documentation
    docker:
      - image: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Ensure astyle agrees with the formatting
          command: ./scripts/run_astyle.sh | ( ! grep -q 'Formatted' )
      - run:
          name: Ensure all functions in kem.h and sig.h are documented
          command: python3 -m pytest --verbose tests/test_documentation.py
      - run:
          name: Check that doxygen can parse the documentation
          command: doxygen docs/.Doxyfile

  linux:
    description: A template for running liboqs tests on x64 Linux Docker VMs
    parameters:
      CONTAINER:
        description: "The docker container to use."
        type: string
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
        default: ""
      PYTEST_ARGS:
        description: "Arguments to pass to pytest."
        type: string
        default: ""
    docker:
      - image: << parameters.CONTAINER >>
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Configure
          command: mkdir build && cd build && source ~/.bashrc && cmake -GNinja << parameters.CMAKE_ARGS >> .. && cmake -LA ..
      - run:
          name: Build
          command: ninja
          working_directory: build
      - run:
          name: Run tests
          command: python3 -m pytest --verbose --ignore=tests/test_documention.py --junitxml=build/test-results/pytest/test-results.xml << parameters.PYTEST_ARGS >>
      - store_test_results: # Note that this command will fail when running CircleCI locally, that is expected behaviour
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  arm_emulated:
    description: A template for running liboqs tests on emulated ARM Docker VMs
    parameters:
      ARCH:
        description: "The desired ARM architecture to be emulated."
        type: string
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install the emulation handlers
          command: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - run:
          name: Run the tests in a container
          command: |
            docker run -e SKIP_TESTS=style --rm -v `pwd`:`pwd` -w `pwd` openquantumsafe/ci-debian-buster-<< parameters.ARCH >>:latest /bin/bash -c "
            uname -a &&
            file /bin/ls &&
            mkdir build &&
            (cd build &&
            cmake -GNinja << parameters.CMAKE_ARGS >> .. &&
            cmake -LA .. &&
            ninja &&
            python3 -m pytest --verbose --numprocesses=auto --ignore=tests/test_documention.py --junitxml=build/test-results/pytest/test-results.xml)
            "
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  macOS:
    description: A template for running liboqs tests on macOS
    parameters:
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
      PYTEST_ARGS:
        description: "Arguments to pass to pytest."
        type: string
        default: ""
    macos:
      xcode: "11.3.0"
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Install dependencies
          command: |
            scripts/git_no_checkin_in_last_day.sh || (
            brew update &&
            brew unlink python@2 &&
            brew install cmake ninja &&
            pip3 install pytest pytest-xdist
            )
      - run:
          name: Get system information
          command: sysctl -a | grep machdep.cpu
      - run:
          name: Configure
          command: mkdir build && cd build && source ~/.bashrc && cmake -GNinja << parameters.CMAKE_ARGS >> .. && cmake -LA ..
      - run:
          name: Build
          command: ninja
          working_directory: build
      - run:
          name: Run tests
          command: python3 -m pytest --verbose --ignore=tests/test_documention.py --junitxml=build/test-results/pytest/test-results.xml << parameters.PYTEST_ARGS >>
      - store_test_results: # Note that this command will fail when running CircleCI locally, that is expected behaviour
          path: build/test-results
      - store_artifacts:
          path: build/test-results
  trigger-downstream-ci:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run:
          name: Trigger OQS-OpenSSL CI
          command: |
            curl -u ${BUILD_TRIGGER_TOKEN}: -X POST --header "Content-Type: application/json" -d '{"branch": "OQS-OpenSSL_1_1_1-stable"}' https://circleci.com/api/v2/project/gh/open-quantum-safe/openssl/pipeline
      - run:
          name: Trigger OQS-BoringSSL CI
          command: |
            curl -u ${BUILD_TRIGGER_TOKEN}: -X POST --header "Content-Type: application/json" -d '{"branch": "master"}' https://circleci.com/api/v2/project/gh/open-quantum-safe/boringssl/pipeline
      - run:
          name: Trigger OQS-OpenSSH CI
          command: |
            curl -u ${BUILD_TRIGGER_TOKEN}: -X POST --header "Content-Type: application/json" -d '{"branch": "OQS-master"}' https://circleci.com/api/v2/project/gh/open-quantum-safe/openssh/pipeline

workflows:
  version: 2
  build:
    jobs:
      - stylecheck:
          <<: *exclude_master
      # Not every executor handles --numprocesses=auto being passed to pytest well
      # See https://github.com/open-quantum-safe/liboqs/issues/738#issuecomment-621394744
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-alpine-amd64:latest
          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=OFF
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-alpine-amd64:latest
          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=ON -DBUILD_SHARED_LIBS=ON
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-centos-7-amd64:latest
          CMAKE_ARGS: -DOPENSSL_ROOT_DIR=/usr/local/ssl
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-centos-8-amd64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=Release -DOQS_PORTABLE_BUILD=OFF
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-debian-buster-amd64:latest
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=gcc-8
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=OFF
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_BUILD_TYPE=Release -DOQS_USE_OPENSSL=OFF -DBUILD_SHARED_LIBS=ON
          PYTEST_ARGS: --ignore=tests/test_namespace.py --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang-9
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang-9 -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address
          PYTEST_ARGS: --numprocesses=auto
      - linux:
          <<: *exclude_master
          <<: *require_stylecheck
          CONTAINER: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
          CMAKE_ARGS: -DCMAKE_C_COMPILER=clang-9 -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Undefined

      # SPHINCS exhausts memory on CircleCI servers
      # for these configurations.
      - arm_emulated:
          <<: *exclude_master
          <<: *require_stylecheck
          ARCH: arm64
          CMAKE_ARGS: -DOQS_ENABLE_SIG_SPHINCS=OFF
      - arm_emulated:
          <<: *exclude_master
          <<: *require_stylecheck
          ARCH: armhf
          CMAKE_ARGS: -DOQS_ENABLE_SIG_SPHINCS=OFF
      - arm_emulated:
          <<: *exclude_master
          <<: *require_stylecheck
          ARCH: armel
          CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Release  -DOQS_ENABLE_SIG_SPHINCS=OFF

      - macOS:
          <<: *exclude_master
          <<: *require_stylecheck
          CMAKE_ARGS: -DOQS_USE_OPENSSL=OFF
          PYTEST_ARGS: --numprocesses=auto
      - macOS:
          <<: *exclude_master
          <<: *require_stylecheck
          CMAKE_ARGS: -DOQS_USE_OPENSSL=ON -DBUILD_SHARED_LIBS=ON

      - trigger-downstream-ci:
          context: openquantumsafe
          filters:
            branches:
              only: master
